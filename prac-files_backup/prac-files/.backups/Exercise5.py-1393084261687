import particleDataStructures
from BrickPi import *   #import BrickPi.py file to use BrickPi operations
from numpy import *


def initialise(self):
    """Initialise various ports value
       and location varables
    """
    self.LEFT_MOTOR = PORT_A
    self.RIGHT_MOTOR = PORT_C
    
    self.LEFT_TOUCHSENSOR = PORT_3
    self.RIGHT_TOUCHSENSOR = PORT_1
    self.SONAR_SENSOR = PORT_2

    self.current_x = 0
    self.current_y = 0
    self.current_theta = 0.0
    
def bumper_left_hit():
    """get left bumper sensor data
    """
    return BrickPi.Sensor[LEFT_TOUCHSENSOR]

def bumper_right_hit():
    """get right bumper sensor data
    """
    return BrickPi.Sensor[RIGHT_TOUCHSENSOR]

def get_distance_measurement():
    """get sonar sensor data
    """
    return BrickPi.Sensor[SONAR_SENSOR]

def calculate_depth(wallCoord, location, float theta):
    """calculated excepted depth for a 
       given particle and give wall
    """
    numerator = (wallCoord.by - wallCoord.ay)*(wallCoord.ax - location.x) - (wallCoord.bx - wallCoord.ax)*(wallCoord.ay - location.y)
    denominator = (wallCoord.by - wallCoord.ay)*math.cos(theta) - (wallCoord.bx - wallCoord.ax)*math.sin(theta)
    depth = numerator/denominator
    
    return depth


def calculate likelihood(float x, float y, float theta, float z):
    
    